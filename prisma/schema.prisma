// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------- MODEL DEFINITIONS --------------------------------------

model User {
  id         String       @id @default(uuid())
  address    String       @unique
  nfts       NFT[]
  Collection Collection[]
}

model NFT {
  id          String   @id @default(uuid())
  metadata    Json
  tags        String[]
  tx          Json?
  name        String
  description String
  image       String
  price       Float

  // relationships ----------------------------

  owner        User        @relation(fields: [ownerId], references: [id])
  ownerId      String
  Collection   Collection? @relation(fields: [collectionId], references: [id])
  collectionId Int?
}

model Collection {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  image       String

  // relationships ----------------------------

  owner                 User                    @relation(fields: [userId], references: [id])
  nfts                  NFT[]
  FeaturedNFTCollection FeaturedNFTCollection[]

  TrendingNFTCollection TrendingNFTCollection[]
  userId                String
}

model FeaturedNFTCollection {
  id           Int        @id @default(autoincrement())
  rank         Int
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId Int
}

model TrendingNFTCollection {
  id   Int @id @default(autoincrement())
  rank Int

  // relationships ----------------------------
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId Int
}
